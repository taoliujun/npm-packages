name: check pull request
run-name: 'check pull request #${{ github.event.pull_request.number }}'
on:
    pull_request:
        # TODO remove edited
        types: [opened, edited, synchronize, reopened]
permissions:
    issues: write
    pull-requests: write
jobs:
    replyChecking:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Get date time
              id: getDateTime
              run: echo "result=$(TZ=Asia/Shanghai date)" >> "$GITHUB_OUTPUT"
            - name: Create or update a comment
              uses: ./.github/actions/unique-comment
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  owner: ${{ github.event.repository.owner.login }}
                  repo: ${{ github.event.repository.name }}
                  issue_number: ${{ github.event.number }}
                  uniqueIdentifier: ${{ github.workflow }}
                  body: |
                      **Checking...**

                      ---

                      Commented by Action [${{github.workflow}}](${{github.event.repository.html_url}}/actions/runs/${{github.run_id}}), last updated on ${{steps.getDateTime.outputs.result}}.

    init:
        runs-on: ubuntu-latest
        steps:
            - name: Init repo
              uses: actions/checkout@v4
              with:
                  ref: ${{github.head_ref}}

            - name: Init pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 8

            - name: Init node
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: 'pnpm'

            - name: Install dependencies
              run: pnpm install

    eslint:
        runs-on: ubuntu-latest
        needs: [init]
        outputs:
            result: ${{ steps.lint.outputs.result }}
        steps:
            - name: Init repo
              uses: actions/checkout@v4
              with:
                  ref: ${{github.head_ref}}

            - name: Init pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 8

            - name: Init node
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: 'pnpm'

            - name: Install dependencies
              run: pnpm install

            - name: Run eslint
              id: lint
              uses: actions/github-script@v7
              with:
                  result-encoding: string
                  script: |
                      let output = '';
                      let outerr = '';
                      await exec.exec("pnpm run lint", [], {
                          // silent: true,
                          ignoreReturnCode: true,
                          listeners: {
                            stdout: (data) => {
                                output += data.toString();
                            },
                            stderr: (data) => {
                                outerr += data.toString();
                            },
                          },
                      });

                      if (outerr) {
                        return `:x: Some command execution errors, non-eslint business errors.`;
                      }

                      const errorMatch = output.match(/(\d+) errors/);
                      const warnMatch = output.match(/(\d+) warnings/);

                      if (errorMatch?.[1] !== '0') {
                        return `:x: ${errorMatch?.[0]} ${warnMatch?.[0]}`;
                      }

                      return `:white_check_mark: ${errorMatch?.[0]} ${warnMatch?.[0]}`;

    typescript:
        runs-on: ubuntu-latest
        needs: [init]
        outputs:
            result: ${{ steps.lint.outputs.result }}
        steps:
            - name: Run tsc
              id: lint
              run: |
                  echo "this is typescript" && echo "result=:x: typescript result" >> "$GITHUB_OUTPUT"

    unitTest:
        runs-on: ubuntu-latest
        needs: [init]
        outputs:
            result: ${{ steps.lint.outputs.result }}
        steps:
            - name: Run jest
              id: lint
              run: |
                  echo "this is unit test" && echo "result=unit test result" >> "$GITHUB_OUTPUT"

    replyResult:
        runs-on: ubuntu-latest
        needs: [eslint, typescript, unitTest]
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Get date time
              id: getDateTime
              run: echo "result=$(TZ=Asia/Shanghai date)" >> "$GITHUB_OUTPUT"
            - name: Create or update a comment
              uses: ./.github/actions/unique-comment
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  owner: ${{ github.event.repository.owner.login }}
                  repo: ${{ github.event.repository.name }}
                  issue_number: ${{ github.event.number }}
                  uniqueIdentifier: ${{ github.workflow }}
                  body: |
                      ## Eslint Check Result

                      ${{needs.eslint.outputs.result}}

                      ## Typescript Check Result

                      ${{needs.typescript.outputs.result}}

                      ## UnitTest Check Result

                      ${{needs.unitTest.outputs.result}}

                      ---

                      Commented by Action [${{github.workflow}}](${{github.event.repository.html_url}}/actions/runs/${{github.run_id}}), last updated on ${{steps.getDateTime.outputs.result}}.
